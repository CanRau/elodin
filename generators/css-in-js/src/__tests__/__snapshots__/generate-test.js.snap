// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compiling to CSS and JavaScript should return a map of files 1`] = `
Object {
  "Button.elo.css": "._1hqkjic {
  border: 0px;
  background-color: red;
  padding-left: 10px
}

._1hqkjic_0-0 {
  background-color: red
}

._1hqkjic_0-0:hover {
  padding-left: 10px
}

._1hqkjic_0-0_1-0 {
  background-color: blue
}

._1hqkjic_1-1 {
  background-color: green
}",
  "Button.elo.js": "import './Button.elo.css'
import { getClassNameFromVariantMap, getDynamicStyleFromVariantMap } from '@elodin/runtime'

const variantClassNameMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Type\\": \\"Primary\\"
  },
  \\"_0-0_1-0\\": {
    \\"Type\\": \\"Primary\\",
    \\"Mode\\": \\"Dark\\"
  },
  \\"_1-1\\": {
    \\"Mode\\": \\"Light\\"
  }
}

const variantStyleMap = {
'__Type-Primary': props => ({
  \\"paddingLeft\\":props.paddingLeft,
  \\":hover\\":{\\"paddingRight\\":props.paddingRight}
}),
'__Type-Primary__Mode-Dark': props => ({
  \\"paddingLeft\\":props.padLeft
})
}

export function Button(props = {}) {
  return {
    _className: '_elo_view ' + getClassNameFromVariantMap('_1hqkjic', variantClassNameMap, props),
    \\"borderWidth\\":props.borderWidth,
    ...getDynamicStyleFromVariantMap(variantStyleMap, props)
  }
}",
  "Label.elo.css": "._1edorjp:hover {
  color: red
}",
  "Label.elo.js": "import './Label.elo.css'

export function Label(props = {}) {
  return {
    _className: '_elo_text _1edorjp',
    \\"lineHeight\\":props.lineHeight,
    \\":hover\\":{\\"fontSize\\":props.fontSize}
  }
}",
  "_reset.elo.css": "._elo_view{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;overflow:hidden;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box}._elo_text{display:inline;overflow:visible}body{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;overflow:hidden;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box;position:fixed;top:0;bottom:0;left:0;right:0}",
  "index.elo.js": "import './_reset.elo.css'
import { Button } from './Button.elo.js'
import { Label } from './Label.elo.js'

export {
  Button,
  Label
}",
}
`;

exports[`Compiling to CSS and JavaScript should return a map of files in devMode 1`] = `
Object {
  "Button.elo.css": ".Button_1hqkjic {
  border: 0px;
  background-color: red;
  padding-left: 10px
}

.Button_1hqkjic__Type-Primary {
  background-color: red
}

.Button_1hqkjic__Type-Primary:hover {
  padding-left: 10px
}

.Button_1hqkjic__Type-Primary__Mode-Dark {
  background-color: blue
}

.Button_1hqkjic__Mode-Light {
  background-color: green
}",
  "Button.elo.js": "import './Button.elo.css'
import { getClassNameFromVariantMap, getDynamicStyleFromVariantMap } from '@elodin/runtime'

const variantClassNameMap = {
  \\"\\": {},
  \\"__Type-Primary\\": {
    \\"Type\\": \\"Primary\\"
  },
  \\"__Type-Primary__Mode-Dark\\": {
    \\"Type\\": \\"Primary\\",
    \\"Mode\\": \\"Dark\\"
  },
  \\"__Mode-Light\\": {
    \\"Mode\\": \\"Light\\"
  }
}

const variantStyleMap = {
'__Type-Primary': props => ({
  \\"paddingLeft\\":props.paddingLeft,
  \\":hover\\":{\\"paddingRight\\":props.paddingRight}
}),
'__Type-Primary__Mode-Dark': props => ({
  \\"paddingLeft\\":props.padLeft
})
}

export function Button(props = {}) {
  return {
    _className: '_elo_view ' + getClassNameFromVariantMap('Button_1hqkjic', variantClassNameMap, props),
    \\"borderWidth\\":props.borderWidth,
    ...getDynamicStyleFromVariantMap(variantStyleMap, props)
  }
}",
  "Label.elo.css": ".Label_1edorjp:hover {
  color: red
}",
  "Label.elo.js": "import './Label.elo.css'

export function Label(props = {}) {
  return {
    _className: '_elo_text Label_1edorjp',
    \\"lineHeight\\":props.lineHeight,
    \\":hover\\":{\\"fontSize\\":props.fontSize}
  }
}",
  "_reset.elo.css": "._elo_view{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;overflow:hidden;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box}._elo_text{display:inline;overflow:visible}body{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;overflow:hidden;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box;position:fixed;top:0;bottom:0;left:0;right:0}",
  "index.elo.js": "import './_reset.elo.css'
import { Button } from './Button.elo.js'
import { Label } from './Label.elo.js'

export {
  Button,
  Label
}",
}
`;

exports[`Compiling to CSS and JavaScript should use the given adapter 1`] = `
Object {
  "Button.elo.css": "._1hqkjic {
  border: 0px;
  background-color: red;
  padding-left: 10px
}

._1hqkjic_0-0 {
  background-color: red
}

._1hqkjic_0-0:hover {
  padding-left: 10px
}

._1hqkjic_0-0_1-0 {
  background-color: blue
}

._1hqkjic_1-1 {
  background-color: green
}",
  "Button.elo.js": "import './Button.elo.css'
import { getClassNameFromVariantMap, getDynamicStyleFromVariantMap } from '@elodin/runtime'
import { createComponent } from 'react-fela'

const variantMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Type\\": \\"Primary\\"
  },
  \\"_0-0_1-0\\": {
    \\"Type\\": \\"Primary\\",
    \\"Mode\\": \\"Dark\\"
  },
  \\"_1-1\\": {
    \\"Mode\\": \\"Light\\"
  }
}

const variantStyleMap = {
'__Type-Primary': props => ({
  \\"paddingLeft\\":props.paddingLeft,
  \\":hover\\":{\\"paddingRight\\":props.paddingRight}
}),
'__Type-Primary__Mode-Dark': props => ({
  \\"paddingLeft\\":props.padLeft
})
}

function ButtonStyle(props  = {}) {
  return {
    _className: '_elo_view ' + getClassNameFromVariantMap('_1hqkjic', variantMap, props),
    \\"borderWidth\\":props.borderWidth,
    ...getDynamicStyleFromVariantMap(variantStyleMap, props)
  }
}

export const Button = createComponent(ButtonStyle)",
  "Label.elo.css": "._1edorjp:hover {
  color: red
}",
  "Label.elo.js": "import './Label.elo.css'
import { createComponent } from 'react-fela'

function LabelStyle(props  = {}) {
  return {
    _className: '_elo_text _1edorjp',
    \\"lineHeight\\":props.lineHeight,
    \\":hover\\":{\\"fontSize\\":props.fontSize}
  }
}

export const Label = createComponent(LabelStyle)",
  "_reset.elo.css": "._elo_view{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;overflow:hidden;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box}._elo_text{display:inline;overflow:visible}body{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;overflow:hidden;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box;position:fixed;top:0;bottom:0;left:0;right:0}",
  "index.elo.js": "import './_reset.elo.css'
import { Button } from './Button.elo.js'
import { Label } from './Label.elo.js'

export {
  Button,
  Label
}",
}
`;
