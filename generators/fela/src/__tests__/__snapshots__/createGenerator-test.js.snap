// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Generating files using @elodin/generator-fela should add reset class names 1`] = `
Object {
  "Button.elo.css": "._fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  ._fjfhc0 {
    padding-left: 20px
  }
}

._fjfhc0_0-0 {
  padding-top: 10px
}",
  "Button.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
require(\\"./Button.elo.css\\")

const variantClassNameMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function Button(props = {}) {
  return {
    _className: \\"view \\" + getClassNameFromVariantMap('_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.css": "._7hpvwv {
  color: red
}",
  "ButtonText.elo.js": "require(\\"./ButtonText.elo.css\\")

export function ButtonText(props = {}) {
  return {
    _className: \\"text _7hpvwv\\",
  }
};",
  "style.elo.js": "import { Button } from './Button.elo.js'
import { ButtonText } from './ButtonText.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should generate css and js files for each style 1`] = `
Object {
  "Button.elo.css": "._fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  ._fjfhc0 {
    padding-left: 20px
  }
}

._fjfhc0_0-0 {
  padding-top: 10px
}",
  "Button.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
require(\\"./Button.elo.css\\")

const variantClassNameMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function Button(props = {}) {
  return {
    _className: getClassNameFromVariantMap('_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.css": "._7hpvwv {
  color: red
}",
  "ButtonText.elo.js": "require(\\"./ButtonText.elo.css\\")

export function ButtonText(props = {}) {
  return {
    _className: \\"_7hpvwv\\",
  }
};",
  "style.elo.js": "import { Button } from './Button.elo.js'
import { ButtonText } from './ButtonText.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should generate readable classnames in devMode 1`] = `
Object {
  "Button.elo.css": ".Button_fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  .Button_fjfhc0 {
    padding-left: 20px
  }
}

.Button_fjfhc0__Mode-Dark {
  padding-top: 10px
}",
  "Button.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
require(\\"./Button.elo.css\\")

const variantClassNameMap = {
  \\"\\": {},
  \\"__Mode-Dark\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function Button(props = {}) {
  return {
    _className: getClassNameFromVariantMap('Button_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.css": ".ButtonText_7hpvwv {
  color: red
}",
  "ButtonText.elo.js": "require(\\"./ButtonText.elo.css\\")

export function ButtonText(props = {}) {
  return {
    _className: \\"ButtonText_7hpvwv\\",
  }
};",
  "style.elo.js": "import { Button } from './Button.elo.js'
import { ButtonText } from './ButtonText.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should only generate js files 1`] = `
Object {
  "Button.elo.js": "export function Button(props = {}) {
  return {
    \\"paddingLeft\\": \\"10px\\",
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingLeft\\": \\"20px\\",
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingTop\\": \\"10px\\",
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.js": "export function ButtonText(props = {}) {
  return {
    \\"color\\": \\"red\\",
  }
};",
  "style.elo.js": "import { Button } from './Button.elo.js'
import { ButtonText } from './ButtonText.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should only generate js files with baseClassName 1`] = `
Object {
  "Button.elo.js": "export function Button(props = {}) {
  return {
    _className: \\"view\\",
    \\"paddingLeft\\": \\"10px\\",
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingLeft\\": \\"20px\\",
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingTop\\": \\"10px\\",
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.js": "export function ButtonText(props = {}) {
  return {
    _className: \\"text\\",
    \\"color\\": \\"red\\",
  }
};",
  "style.elo.js": "import { Button } from './Button.elo.js'
import { ButtonText } from './ButtonText.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should use a custom style name 1`] = `
Object {
  "Button.elo.css": "._fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  ._fjfhc0 {
    padding-left: 20px
  }
}

._fjfhc0_0-0 {
  padding-top: 10px
}",
  "Button.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
require(\\"./Button.elo.css\\")

const variantClassNameMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function ButtonStyle(props = {}) {
  return {
    _className: getClassNameFromVariantMap('_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.css": "._7hpvwv {
  color: red
}",
  "ButtonText.elo.js": "require(\\"./ButtonText.elo.css\\")

export function ButtonTextStyle(props = {}) {
  return {
    _className: \\"_7hpvwv\\",
  }
};",
  "style.elo.js": "import { ButtonStyle } from './Button.elo.js'
import { ButtonTextStyle } from './ButtonText.elo.js'

export {
  ButtonStyle,
  ButtonTextStyle
}",
}
`;

exports[`Generating files using @elodin/generator-fela should use custom css file names 1`] = `
Object {
  "BUTTON.elo.css": "._fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  ._fjfhc0 {
    padding-left: 20px
  }
}

._fjfhc0_0-0 {
  padding-top: 10px
}",
  "BUTTONTEXT.elo.css": "._7hpvwv {
  color: red
}",
  "Button.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
require(\\"./BUTTON.elo.css\\")

const variantClassNameMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function Button(props = {}) {
  return {
    _className: getClassNameFromVariantMap('_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.js": "require(\\"./BUTTONTEXT.elo.css\\")

export function ButtonText(props = {}) {
  return {
    _className: \\"_7hpvwv\\",
  }
};",
  "style.elo.js": "import { Button } from './Button.elo.js'
import { ButtonText } from './ButtonText.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should use custom js file names 1`] = `
Object {
  "BUTTON.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
require(\\"./Button.elo.css\\")

const variantClassNameMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function Button(props = {}) {
  return {
    _className: getClassNameFromVariantMap('_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "BUTTONTEXT.elo.js": "require(\\"./ButtonText.elo.css\\")

export function ButtonText(props = {}) {
  return {
    _className: \\"_7hpvwv\\",
  }
};",
  "Button.elo.css": "._fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  ._fjfhc0 {
    padding-left: 20px
  }
}

._fjfhc0_0-0 {
  padding-top: 10px
}",
  "ButtonText.elo.css": "._7hpvwv {
  color: red
}",
  "style.elo.js": "import { Button } from './BUTTON.elo.js'
import { ButtonText } from './BUTTONTEXT.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should use dynamic imports 1`] = `
Object {
  "Button.elo.css": "._fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  ._fjfhc0 {
    padding-left: 20px
  }
}

._fjfhc0_0-0 {
  padding-top: 10px
}",
  "Button.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
const variantClassNameMap = {
  \\"\\": {},
  \\"_0-0\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function Button(props = {}) {
  import(\\"./Button.elo.css\\")

  return {
    _className: getClassNameFromVariantMap('_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "ButtonText.elo.css": "._7hpvwv {
  color: red
}",
  "ButtonText.elo.js": "export function ButtonText(props = {}) {
  import(\\"./ButtonText.elo.css\\")

  return {
    _className: \\"_7hpvwv\\",
  }
};",
  "style.elo.js": "import { Button } from './Button.elo.js'
import { ButtonText } from './ButtonText.elo.js'

export {
  Button,
  ButtonText
}",
}
`;

exports[`Generating files using @elodin/generator-fela should work with all options combined 1`] = `
Object {
  "BUTTON.elo.css": ".Button_fjfhc0 {
  padding-left: 10px
}

@media (min-width: 1024px) {
  .Button_fjfhc0 {
    padding-left: 20px
  }
}

.Button_fjfhc0__Mode-Dark {
  padding-top: 10px
}",
  "BUTTON.elo.js": "import { getClassNameFromVariantMap } from \\"@elodin/runtime\\"
const variantClassNameMap = {
  \\"\\": {},
  \\"__Mode-Dark\\": {
    \\"Mode\\": \\"Dark\\"
  }
}

export function Button(props = {}) {
  import(\\"./BUTTON.elo.css\\")

  return {
    _className: \\"view \\" + getClassNameFromVariantMap('Button_fjfhc0', variantClassNameMap, props),
    \\"paddingRight\\": props.right,
    \\"@media (min-width: 1024px)\\": {
      \\"paddingRight\\": props.right,
    },
    \\"extend\\": [{
      \\"condition\\": props.mode === \\"Dark\\",
      \\"style\\": {
        \\"paddingBottom\\": props.bottom,
      },
    }],
  }
};",
  "BUTTONTEXT.elo.css": ".ButtonText_7hpvwv {
  color: red
}",
  "BUTTONTEXT.elo.js": "export function ButtonText(props = {}) {
  import(\\"./BUTTONTEXT.elo.css\\")

  return {
    _className: \\"text ButtonText_7hpvwv\\",
  }
};",
  "style.elo.js": "import { Button } from './BUTTON.elo.js'
import { ButtonText } from './BUTTONTEXT.elo.js'

export {
  Button,
  ButtonText
}",
}
`;
