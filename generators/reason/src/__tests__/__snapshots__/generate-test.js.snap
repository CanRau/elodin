// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Compiling to ReasonML should return a map of files 1`] = `
Object {
  "RootStyle.re": "[%bs.raw {|
  require(\\"./_reset.elo.css\\")
|}];

[%bs.raw {|
  require(\\"./RootStyleButton.elo.css\\")
|}];

[%bs.raw {|
  require(\\"./RootStyleLabel.elo.css\\")
|}];

open Css;

[@bs.deriving jsConverter]
type size =
  | Small
  | Big;

[@bs.deriving jsConverter]
type type_ =
  | Primary
  | Secondary;

[@bs.deriving jsConverter]
type mode =
  | Dark
  | Light
  | Semi;

let buttonStyle = (~borderWidth:string, ~paddingLeft:string, ~paddingRight:string, ~padLeft:string) => style([unsafe(\\"border-width\\", borderWidth)]);
let getButtonStyleVariants = (~borderWidth:string, ~paddingLeft:string, ~paddingRight:string, ~padLeft:string, ~type_, ~mode, ()) => {
    let buttonStylePrimary = style([unsafe(\\"padding-left\\", paddingLeft),
      hover([unsafe(\\"padding-right\\", paddingRight)])]);
    let buttonStylePrimaryDark = style([unsafe(\\"padding-left\\", padLeft)]);

switch (type_, mode) {
    | (Some(Primary), Some(Dark)) => [buttonStylePrimary,buttonStylePrimaryDark]
    | (Some(Primary), Some(Light)) => [buttonStylePrimary]
    | (Some(Primary), Some(Semi)) => [buttonStylePrimary]
    | (Some(Primary), None) => [buttonStylePrimary]
    | (Some(Secondary), Some(Dark)) => []
    | (Some(Secondary), Some(Light)) => []
    | (Some(Secondary), Some(Semi)) => []
    | (Some(Secondary), None) => []
    | (None, Some(Dark)) => []
    | (None, Some(Light)) => []
    | (None, Some(Semi)) => []
    | (None, None) => []
    }
  };

let getButtonVariants = (~type_, ~mode, ()) => {
  switch (type_, mode) {
    | (Some(Primary), Some(Dark)) => \\" _1a6mix7_0-0 _1a6mix7_1-0 _1a6mix7_0-0_1-0\\"
    | (Some(Primary), Some(Light)) => \\" _1a6mix7_0-0 _1a6mix7_1-1 _1a6mix7_0-0_1-1\\"
    | (Some(Primary), Some(Semi)) => \\" _1a6mix7_0-0 _1a6mix7_1-2 _1a6mix7_0-0_1-2\\"
    | (Some(Primary), None) => \\" _1a6mix7_0-0\\"
    | (Some(Secondary), Some(Dark)) => \\" _1a6mix7_0-1 _1a6mix7_1-0 _1a6mix7_0-1_1-0\\"
    | (Some(Secondary), Some(Light)) => \\" _1a6mix7_0-1 _1a6mix7_1-1 _1a6mix7_0-1_1-1\\"
    | (Some(Secondary), Some(Semi)) => \\"\\"
    | (Some(Secondary), None) => \\" _1a6mix7_0-1\\"
    | (None, Some(Dark)) => \\" _1a6mix7_1-0\\"
    | (None, Some(Light)) => \\" _1a6mix7_1-1\\"
    | (None, Some(Semi)) => \\" _1a6mix7_1-2\\"
    | (None, None) => \\"\\"
  }
};

let button = (~borderWidth:string, ~paddingLeft:string, ~paddingRight:string, ~padLeft:string, ~type_=?, ~mode=?, ()) => \\"_elo_view _1a6mix7\\" ++ getButtonVariants(~type_, ~mode, ()) ++ \\" \\" ++ merge([buttonStyle(~borderWidth, ~paddingLeft, ~paddingRight, ~padLeft), ...getButtonStyleVariants(~borderWidth, ~paddingLeft, ~paddingRight, ~padLeft, ~type_, ~mode, ())]);

let labelStyle = (~lineHeight:string, ~fontSize:string, ~mediaFontSize:string, ~mediaHoverFontSize:string) => style([unsafe(\\"line-height\\", lineHeight),
    hover([unsafe(\\"font-size\\", fontSize)]),
    media(\\"(min-width: 320px) and (max-width: 320px)\\", [unsafe(\\"font-size\\", mediaFontSize),
hover([unsafe(\\"font-size\\", mediaHoverFontSize)])])]);
let getLabelVariants = (~size, ~mode, ()) => {
  switch (size, mode) {
    | (Some(Small), Some(Dark)) => \\" _1rqb5jm_0-0 _1rqb5jm_1-0 _1rqb5jm_0-0_1-0\\"
    | (Some(Small), Some(Light)) => \\" _1rqb5jm_0-0 _1rqb5jm_1-1 _1rqb5jm_0-0_1-1\\"
    | (Some(Small), Some(Semi)) => \\" _1rqb5jm_0-0 _1rqb5jm_1-2 _1rqb5jm_0-0_1-2\\"
    | (Some(Small), None) => \\" _1rqb5jm_0-0\\"
    | (Some(Big), Some(Dark)) => \\"\\"
    | (Some(Big), Some(Light)) => \\" _1rqb5jm_0-1 _1rqb5jm_1-1 _1rqb5jm_0-1_1-1\\"
    | (Some(Big), Some(Semi)) => \\"\\"
    | (Some(Big), None) => \\" _1rqb5jm_0-1\\"
    | (None, Some(Dark)) => \\" _1rqb5jm_1-0\\"
    | (None, Some(Light)) => \\" _1rqb5jm_1-1\\"
    | (None, Some(Semi)) => \\" _1rqb5jm_1-2\\"
    | (None, None) => \\"\\"
  }
};

let label = (~lineHeight:string, ~fontSize:string, ~mediaFontSize:string, ~mediaHoverFontSize:string, ~size=?, ~mode=?, ()) => \\"_elo_text _1rqb5jm\\" ++ getLabelVariants(~size, ~mode, ()) ++ \\" \\" ++ merge([labelStyle(~lineHeight, ~fontSize, ~mediaFontSize, ~mediaHoverFontSize)]);
",
  "RootStyleButton.elo.css": "._1a6mix7 {
  background-color: red;
  padding-left: 10px;
  border: 0px
}

._1a6mix7_0-0 {
  background-color: red
}

._1a6mix7_0-0:hover {
  padding-left: 10px
}

._1a6mix7_0-0_1-0 {
  background-color: blue
}

._1a6mix7_1-1 {
  background-color: green
}",
  "RootStyleLabel.elo.css": "._1rqb5jm_0-0 {
  font-size: 15px
}

._1rqb5jm:hover {
  color: red
}

._1rqb5jm_1-1 {
  font-size: 16px
}

@media (min-width: 320px) and (max-width: 320px) {
  ._1rqb5jm {
    color: green
  }
}

@media (min-width: 320px) and (max-width: 320px) {
  ._1rqb5jm:hover {
    color: blue
  }
}",
  "_reset.elo.css": "._elo_view{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box}._elo_text{display:inline;}",
}
`;

exports[`Compiling to ReasonML should return a map of files in devMode 1`] = `
Object {
  "RootStyle.re": "[%bs.raw {|
  require(\\"./_reset.elo.css\\")
|}];

[%bs.raw {|
  require(\\"./RootStyleButton.elo.css\\")
|}];

[%bs.raw {|
  require(\\"./RootStyleLabel.elo.css\\")
|}];

open Css;

[@bs.deriving jsConverter]
type size =
  | Small
  | Big;

[@bs.deriving jsConverter]
type type_ =
  | Primary
  | Secondary;

[@bs.deriving jsConverter]
type mode =
  | Dark
  | Light
  | Semi;

let buttonStyle = (~borderWidth:string, ~paddingLeft:string, ~paddingRight:string, ~padLeft:string) => style([unsafe(\\"border-width\\", borderWidth)]);
let getButtonStyleVariants = (~borderWidth:string, ~paddingLeft:string, ~paddingRight:string, ~padLeft:string, ~type_, ~mode, ()) => {
    let buttonStylePrimary = style([unsafe(\\"padding-left\\", paddingLeft),
      hover([unsafe(\\"padding-right\\", paddingRight)])]);
    let buttonStylePrimaryDark = style([unsafe(\\"padding-left\\", padLeft)]);

switch (type_, mode) {
    | (Some(Primary), Some(Dark)) => [buttonStylePrimary,buttonStylePrimaryDark]
    | (Some(Primary), Some(Light)) => [buttonStylePrimary]
    | (Some(Primary), Some(Semi)) => [buttonStylePrimary]
    | (Some(Primary), None) => [buttonStylePrimary]
    | (Some(Secondary), Some(Dark)) => []
    | (Some(Secondary), Some(Light)) => []
    | (Some(Secondary), Some(Semi)) => []
    | (Some(Secondary), None) => []
    | (None, Some(Dark)) => []
    | (None, Some(Light)) => []
    | (None, Some(Semi)) => []
    | (None, None) => []
    }
  };

let getButtonVariants = (~type_, ~mode, ()) => {
  switch (type_, mode) {
    | (Some(Primary), Some(Dark)) => \\" Button_1a6mix7__Type_-Primary Button_1a6mix7__Mode-Dark Button_1a6mix7__Type_-Primary__Mode-Dark\\"
    | (Some(Primary), Some(Light)) => \\" Button_1a6mix7__Type_-Primary Button_1a6mix7__Mode-Light Button_1a6mix7__Type_-Primary__Mode-Light\\"
    | (Some(Primary), Some(Semi)) => \\" Button_1a6mix7__Type_-Primary Button_1a6mix7__Mode-Semi Button_1a6mix7__Type_-Primary__Mode-Semi\\"
    | (Some(Primary), None) => \\" Button_1a6mix7__Type_-Primary\\"
    | (Some(Secondary), Some(Dark)) => \\" Button_1a6mix7__Type_-Secondary Button_1a6mix7__Mode-Dark Button_1a6mix7__Type_-Secondary__Mode-Dark\\"
    | (Some(Secondary), Some(Light)) => \\" Button_1a6mix7__Type_-Secondary Button_1a6mix7__Mode-Light Button_1a6mix7__Type_-Secondary__Mode-Light\\"
    | (Some(Secondary), Some(Semi)) => \\"\\"
    | (Some(Secondary), None) => \\" Button_1a6mix7__Type_-Secondary\\"
    | (None, Some(Dark)) => \\" Button_1a6mix7__Mode-Dark\\"
    | (None, Some(Light)) => \\" Button_1a6mix7__Mode-Light\\"
    | (None, Some(Semi)) => \\" Button_1a6mix7__Mode-Semi\\"
    | (None, None) => \\"\\"
  }
};

let button = (~borderWidth:string, ~paddingLeft:string, ~paddingRight:string, ~padLeft:string, ~type_=?, ~mode=?, ()) => \\"_elo_view Button_1a6mix7\\" ++ getButtonVariants(~type_, ~mode, ()) ++ \\" \\" ++ merge([buttonStyle(~borderWidth, ~paddingLeft, ~paddingRight, ~padLeft), ...getButtonStyleVariants(~borderWidth, ~paddingLeft, ~paddingRight, ~padLeft, ~type_, ~mode, ())]);

let labelStyle = (~lineHeight:string, ~fontSize:string, ~mediaFontSize:string, ~mediaHoverFontSize:string) => style([unsafe(\\"line-height\\", lineHeight),
    hover([unsafe(\\"font-size\\", fontSize)]),
    media(\\"(min-width: 320px) and (max-width: 320px)\\", [unsafe(\\"font-size\\", mediaFontSize),
hover([unsafe(\\"font-size\\", mediaHoverFontSize)])])]);
let getLabelVariants = (~size, ~mode, ()) => {
  switch (size, mode) {
    | (Some(Small), Some(Dark)) => \\" Label_1rqb5jm__Size-Small Label_1rqb5jm__Mode-Dark Label_1rqb5jm__Size-Small__Mode-Dark\\"
    | (Some(Small), Some(Light)) => \\" Label_1rqb5jm__Size-Small Label_1rqb5jm__Mode-Light Label_1rqb5jm__Size-Small__Mode-Light\\"
    | (Some(Small), Some(Semi)) => \\" Label_1rqb5jm__Size-Small Label_1rqb5jm__Mode-Semi Label_1rqb5jm__Size-Small__Mode-Semi\\"
    | (Some(Small), None) => \\" Label_1rqb5jm__Size-Small\\"
    | (Some(Big), Some(Dark)) => \\"\\"
    | (Some(Big), Some(Light)) => \\" Label_1rqb5jm__Size-Big Label_1rqb5jm__Mode-Light Label_1rqb5jm__Size-Big__Mode-Light\\"
    | (Some(Big), Some(Semi)) => \\"\\"
    | (Some(Big), None) => \\" Label_1rqb5jm__Size-Big\\"
    | (None, Some(Dark)) => \\" Label_1rqb5jm__Mode-Dark\\"
    | (None, Some(Light)) => \\" Label_1rqb5jm__Mode-Light\\"
    | (None, Some(Semi)) => \\" Label_1rqb5jm__Mode-Semi\\"
    | (None, None) => \\"\\"
  }
};

let label = (~lineHeight:string, ~fontSize:string, ~mediaFontSize:string, ~mediaHoverFontSize:string, ~size=?, ~mode=?, ()) => \\"_elo_text Label_1rqb5jm\\" ++ getLabelVariants(~size, ~mode, ()) ++ \\" \\" ++ merge([labelStyle(~lineHeight, ~fontSize, ~mediaFontSize, ~mediaHoverFontSize)]);
",
  "RootStyleButton.elo.css": ".Button_1a6mix7 {
  background-color: red;
  padding-left: 10px;
  border: 0px
}

.Button_1a6mix7__Type_-Primary {
  background-color: red
}

.Button_1a6mix7__Type_-Primary:hover {
  padding-left: 10px
}

.Button_1a6mix7__Type_-Primary__Mode-Dark {
  background-color: blue
}

.Button_1a6mix7__Mode-Light {
  background-color: green
}",
  "RootStyleLabel.elo.css": ".Label_1rqb5jm__Size-Small {
  font-size: 15px
}

.Label_1rqb5jm:hover {
  color: red
}

.Label_1rqb5jm__Mode-Light {
  font-size: 16px
}

@media (min-width: 320px) and (max-width: 320px) {
  .Label_1rqb5jm {
    color: green
  }
}

@media (min-width: 320px) and (max-width: 320px) {
  .Label_1rqb5jm:hover {
    color: blue
  }
}",
  "_reset.elo.css": "._elo_view{display:-webkit-box;display:-moz-box;display:-ms-flexbox;display:-webkit-flex;display:flex;-webkit-overflow-scrolling:touch;align-self:stretch;flex-direction:column;-webkit-box-orient:vertical;-webkit-box-direction:normal;flex-shrink:0;max-width:100%;box-sizing:border-box}._elo_text{display:inline;}",
}
`;
